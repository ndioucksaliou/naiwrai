# Generated by Django 4.1.7 on 2023-04-28 02:31

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0083_workflowcontenttype"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="DigitalOfferPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("description", wagtail.fields.RichTextField(blank=True, null=True)),
                (
                    "logo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Digital Offer Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "box_class",
                    models.CharField(
                        help_text="Donner la class comportant le background color du box",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "icon_class",
                    models.CharField(
                        help_text="Donner la class comportant le background color de l'icon ",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=255, null=True)),
                ("description", wagtail.fields.RichTextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="DigitalOfferPageOfferPlacement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="offer.offer",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="offer_placements",
                        to="offer.digitalofferpage",
                    ),
                ),
            ],
            options={
                "verbose_name": "offer placement",
                "verbose_name_plural": "offer placements",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
